name: Autograding Tests
'on':
  - push
  - repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test main flow
        id: test-main-flow
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Test main flow
          command: 'gradle test --tests "bank.BankTest.testMainFlow"'
          timeout: 1
          max-score: 5

      - name: Register customer with correct balance
        id: register-customer
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Register customer with correct balance
          command: 'gradle test --tests "bank.BankTest.testRegisterCustomerStoresAccountWithCorrectBalance"'
          timeout: 1
          max-score: 5

      - name: Deposit increases balance
        id: deposit-increases-balance
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Deposit increases balance
          command: 'gradle test --tests "bank.BankTest.testDepositIncreasesBalance"'
          timeout: 1
          max-score: 5

      - name: Withdraw with enough money
        id: withdraw-enough-money
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Withdraw with enough money
          command: 'gradle test --tests "bank.BankTest.testWithdrawDecreasesBalanceIfEnoughMoney"'
          timeout: 1
          max-score: 5

      - name: Withdraw fails if not enough money
        id: withdraw-fails
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Withdraw fails if not enough money
          command: 'gradle test --tests "bank.BankTest.testWithdrawFailsIfNotEnoughMoney"'
          timeout: 1
          max-score: 5

      - name: Transfer moves money between accounts
        id: transfer-money
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Transfer moves money between accounts
          command: 'gradle test --tests "bank.BankTest.testTransferMovesMoneyBetweenAccounts"'
          timeout: 1
          max-score: 5

      - name: Transfer fails if insufficient funds
        id: transfer-fails
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: BankTest - Transfer fails if insufficient funds
          command: 'gradle test --tests "bank.BankTest.testTransferFailsIfInsufficientFunds"'
          timeout: 1
          max-score: 5

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          TEST-MAIN-FLOW_RESULTS: "${{steps.test-main-flow.outputs.result}}"
          REGISTER-CUSTOMER_RESULTS: "${{steps.register-customer.outputs.result}}"
          DEPOSIT-INCREASES-BALANCE_RESULTS: "${{steps.deposit-increases-balance.outputs.result}}"
          WITHDRAW-ENOUGH-MONEY_RESULTS: "${{steps.withdraw-enough-money.outputs.result}}"
          WITHDRAW-FAILS_RESULTS: "${{steps.withdraw-fails.outputs.result}}"
          TRANSFER-MONEY_RESULTS: "${{steps.transfer-money.outputs.result}}"
          TRANSFER-FAILS_RESULTS: "${{steps.transfer-fails.outputs.result}}"
        with:
          runners: test-main-flow,register-customer,deposit-increases-balance,withdraw-enough-money,withdraw-fails,transfer-money,transfer-fails
